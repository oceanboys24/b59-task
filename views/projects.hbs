<!-- Projects Content -->
<div class="container p-3 w-55 bg-body-secondary mt-5 mb-5 rounded shadow-lg">
  <h2 class="text-center fw-bold">MY PROJECT</h2>
  <div class="row row-cols-4 justify-content-center gap-3">
    <!-- Card Project -->
    {{#each projects}}
      <div class="card col">
        <img src="assets/img/logo.png" class="card-img-top" alt="{{name}}" />
        <div class="card-body">
          <h5 class="card-title">
            <a
              class="text-decoration-none"
              href="/detail-project/{{id}}"
            >{{name}}</a>
          </h5>
          <p>Duration: 3 Months</p>
          <div
            class="overflow-y-auto"
            style="max-width: 225px; max-height: 98px"
          >
            <p class="card-text">{{description}}</p>
          </div>
          <div class="d-flex mb-3 fs-2">
            {{#each stack}}
              <i class="{{this}}"></i>
            {{/each}}
          </div>
          <div class="d-flex justify-content-between">
            <a href="/project-edit/{{id}}" class="btn btn-primary">Edit</a>
            <button
              type="button"
              class="btn btn-danger delete-button"
              data-id="{{id}}"
            >
              Delete
            </button>
          </div>
        </div>
      </div>
    {{/each}}
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const deleteButtons = document.querySelectorAll(".delete-button");

    deleteButtons.forEach((button) => {
      button.addEventListener("click", async (event) => {
        const projectId = button.getAttribute("data-id");

        // Konfirmasi SweetAlert sebelum menghapus
        const result = await Swal.fire({
          title: "Are you sure?",
          text: "This action cannot be undone!",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#d33",
          cancelButtonColor: "#3085d6",
          confirmButtonText: "Yes, delete it!",
        });

        // Jika pengguna mengonfirmasi, kirimkan permintaan ke server
        if (result.isConfirmed) {
          try {
            const response = await fetch(`/delete-project/${projectId}`, {
              method: "POST",
              headers: { "Content-Type": "application/json" },
            });

            if (response.ok) {
              // Jika penghapusan sukses
              Swal.fire("Deleted!", "Your project has been deleted.", "success");
              button.closest(".card").remove(); // Menghapus elemen kartu dari DOM
            } else {
              // Jika gagal, tampilkan pesan error
              const errorData = await response.json();
              Swal.fire("Error!", errorData.message || "Failed to delete project.", "error");
            }
          } catch (error) {
            // Menangani jika ada kesalahan pada permintaan
            Swal.fire("Error!", "Something went wrong.", "error");
          }
        }
      });
    });
  });
</script>